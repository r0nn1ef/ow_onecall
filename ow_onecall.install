<?php

/**
 * @file
 * Install, update and uninstall functions for the OpenWeather API module.
 */

/**
 * Implements hook_schema().
 */
function ow_onecall_schema() {
  $schema = [
    'onecall_count' => [
      'description' => 'Logs the number of calls to the OpenWeather One Call API with this module.',
      'fields' => [
        'id' => [
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'description' => 'Primary Key: Unique ID.',
        ],
        'call_date' => [
          'type' => 'int',
          'description' => 'The day for the API call log.',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
          'size' => 'normal'
        ],
        'type_weather' => [
          'type' => 'int',
          'description' => 'The number of calls for the given date for weather.',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
          'size' => 'normal'
        ],
          'type_geocode' => [
              'type' => 'int',
              'description' => 'The number of calls for the given date for geocode.',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
              'size' => 'normal'
          ],
          'type_reverse_geocode' => [
              'type' => 'int',
              'description' => 'The number of calls for the given date for reverse geocode.',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
              'size' => 'normal'
          ],
          'type_historical' => [
              'type' => 'int',
              'description' => 'The number of calls for the given date for historical weather.',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
              'size' => 'normal'
          ],
          'type_aggregation' => [
              'type' => 'int',
              'description' => 'The number of calls for the given date for aggregated weather.',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
              'size' => 'normal'
          ],
          'type_overview' => [
              'type' => 'int',
              'description' => 'The number of calls for the given date for weather overview.',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
              'size' => 'normal'
          ],
      ],
      'primary key' => ['id'],
      'indexes' => [
        'idx_call_date' => ['call_date']
      ]
    ]
  ];

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function ow_onecall_requirements($phase) {
  $requirements = [];
  if ( $phase == 'runtime') {
    $today = new \DateTime();
    $today->setTime(0, 0, 0);
    $result = \Drupal::database()
      ->query("SELECT * FROM {onecall_count} WHERE call_date = :today", [':today' => $today->getTimestamp()], [], ['fetch' => PDO::FETCH_ASSOC])->fetchAll();

    if ( $result ) {
        $result = $result[0];
      $total = (int) $result->type_weather + (int) $result->type_geocode + (int) $result->type_reverse_geocode + (int) $result->type_historical + (int) $result->type_aggregation + (int) $result->type_overview;

      if ( $total <= 750 ) {
        $status = REQUIREMENT_OK;
      } elseif ($total > 750 && $total < 1000) {
        $status = REQUIREMENT_WARNING;
      } elseif ( $total >= 1000 ) {
        $status = REQUIREMENT_ERROR;
      }
      $replacements = [
          '@count' => $total,
          '@weather_count' => $result->type_weather,
          '@geo_count' => $result->type_geocode,
          '@rgeo_count' => $result->type_reverse_geocode,
          '@historical_count' => $result->type_historical,
          '@daily_count' => $result->type_aggregation,
          '@overview_count' => $result->type_overview,
      ];
      $description = t('<p>There have been @count One Call API request(s) today. (Current weather: @weather_count, Weather overview: @overview_count, Historical weather: @historical_count, Daily weather aggregation: @daily_count, Geocode: @geo_count, Reverse geocode: @rgeo_count)</p>', $replacements);
      $requirements['ow_onecall'] = [
        'title' => t('One Call API'),
        'description' => $description,
        'severity' => $status,
      ];
    } else {
      $requirements['ow_onecall'] = [
        'title' => t('One Call API'),
        'value' => 0,
        'description' => t('There have been 0 One Call API requests today.'),
        'severity' => REQUIREMENT_OK
      ];
    }
  }

  return $requirements;
}
